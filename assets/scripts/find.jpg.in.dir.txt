I want a bash command that will delete all .jpg in a directory recurcsively. 

```
find . -name "*.jpg" -type f -delete
```

**Explanation:**

* `find .`: This starts the `find` command and specifies that it should search in the current directory (`.`).
* `-name "*.jpg"`: This tells `find` to look for files whose names match the pattern "*.jpg".  The asterisk `*` is a wildcard that matches any sequence of characters.
* `-type f`: This limits the search to only files (and not directories).  This is important to prevent accidental deletion of directories.
* `-delete`: This option tells `find` to delete the files it finds.

**Important Considerations:**

* **Case Sensitivity:** The `-name` option is case-sensitive. If you have files with extensions like `.JPG` or `.jpeg`, you might want to use `-iname` for a case-insensitive search: `find . -iname "*.jpg" -type f -delete`  You could also use `find . -name "*.jpg" -o -name "*.JPG" -o -name "*.jpeg" -o -name "*.JPEG" -type f -delete` to cover different cases.
* **Permissions:** You need to have write permissions in the directories where you're trying to delete files for the command to work.
* **Alternatives:**  While `find` is powerful, you could also use `globstar` if your shell supports it (most modern bash shells do):

```bash
shopt -s globstar  # Enable globstar (if not already enabled)
rm **/*.jpg
```

